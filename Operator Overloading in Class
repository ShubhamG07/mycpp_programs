//Operator Overloading for Unary and Binary Operator in CPP class

//Our Code Starts From Here

#include <iostream>
using namespace std;

class Fraction {
   
    int numerator;
    int denominator;
    
     public : 
     
     //Parametrised Constructor for Creating our Fraction Class Object
     
     Fraction (int num,int den){
         this->numerator=num;
         this->denominator=den;
     }
     
     //Simplyfying Function for our fraction
     
     void simplify(){
         int gcd=1;
         int j= min(this->numerator,this->denominator);
         for(int i=1;i<=j;i++){
             if(this->numerator%i==0 && this->denominator%i==0){
                 gcd=i;
             }
         }
             this->numerator=this->numerator/gcd;
             this->denominator=this->denominator/gcd;
     }
     
     //Print Function to Print the Fraction
     
     void print(){
         cout<<this->numerator<<'/'<<this->denominator<<endl;
     }
     
     //Addition 
     Fraction operator+(Fraction const &f2){
         int lcm= denominator*f2.denominator;
         int x= lcm/denominator;
         int y=lcm/f2.denominator;
         int num= x*numerator+(y*f2.numerator);
         Fraction fnew(num,lcm);
         fnew.simplify();
         return fnew;
     }
     
     //Multiplication
     Fraction operator*(Fraction const &F2 ){
         int num = numerator*F2.numerator;
         int den= denominator*F2.denominator;
         Fraction Fnew(num, den);
         Fnew.simplify();
         return Fnew;
         
     }
     
     //Checking Equality
     bool operator==(Fraction const &F2){
         return(numerator==F2.numerator && denominator==F2.denominator);
     }
     
     //Pre-Increment
     Fraction& operator++(){
         numerator=numerator+denominator;
         return *this;
     }
     
     //Post-Increment
     Fraction operator++(int){
         numerator=numerator+denominator;
         return *this;
     }
     
     
     Fraction& operator+=(Fraction const &F2){
         int lcm= denominator*F2.denominator;
         int x= lcm/denominator;
         int y=lcm/F2.denominator;
         int num= x*numerator+(y*F2.numerator);
         this->numerator=num;
         this->denominator=lcm;
         simplify();
         return *this;
     }
     
};

int main() {
    
 Fraction F1(5,3);
 Fraction F2(4,9);
 Fraction F3 = F1+F2;
 Fraction F4 = F3*F1;
 F1.print();
 F2.print();
 F3.print();
 F4.print();
 Fraction F5 = ++(++F4);
 F5.print();
 F4.print();  //F4 will change its value here
 (F2+=F5)+=F5;
 F2.print();  //F2 will change its value
    
}

//Our Code Ends Here
